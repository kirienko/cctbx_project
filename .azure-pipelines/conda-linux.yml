# Script for building CCTBX
# linux image descriptions
# https://github.com/Microsoft/azure-pipelines-image-generation/blob/master/images/linux/Ubuntu1604-README.md

jobs:
- job: ${{ format('{0}_{1}', parameters.distribution, join('_', parameters.version) ) }}
  pool:
    vmImage: ubuntu-16.04
  timeoutInMinutes: 360
  strategy:
    maxParallel: 2
    matrix:
      python2.7:
        CONDA: Linux
        OS: linux-64
        PYTHON_VERSION: py27
      python3.6:
        CONDA: Linux
        OS: linux-64
        PYTHON_VERSION: py36
      python3.7:
        CONDA: Linux
        OS: linux-64
        PYTHON_VERSION: py37
      python3.8:
        CONDA: Linux
        OS: linux-64
        PYTHON_VERSION: py38

  container:
    image: ${{ parameters.distribution }}:${{ join('.', parameters.version) }}
    options: "--name ci-container -v /usr/bin/docker:/tmp/docker:ro"

  steps:
  # https://github.com/ApexAI/performance_test/blob/master/azure-pipelines.yml#L9-L17

  # centos setup
  - script: |
      /tmp/docker exec -t -u 0 ci-container \
      sh -c "yum install -y sudo"
    displayName: Set up sudo for CentOS
    condition: eq('${{ parameters.distribution }}', 'centos')

  - script: |
      sudo yum groupinstall -y 'Development Tools'
      sudo yum install -y mesa-libGLU-devel mesa-libGL-devel
    displayName: Install dependencies for CentOS
    condition: eq('${{ parameters.distribution }}', 'centos')

  - script: |
      sudo yum install -y python-argparse
    displayName: Install argparse for CentOS 6
    condition: eq('${{ parameters.version[0] }}', 6)

  - bash: |
      echo "##vso[task.setvariable variable=LC_ALL]C.utf8"
    displayName: Setup locale for CentOS 8
    condition: eq('${{ parameters.version[0] }}', 8)

  # ubuntu setup
  - script: |
      /tmp/docker exec -t -u 0 ci-container \
      sh -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confold" -y install sudo"
    displayName: Set up sudo for Ubuntu
    condition: eq('${{ parameters.distribution }}', 'ubuntu')

  - script: |
      sudo apt-get install -y build-essential curl git libgl1-mesa-dev libglu1-mesa-dev locales subversion
      sudo locale-gen en_US.UTF-8
      sudo update-locale
    displayName: Install dependencies for Ubuntu
    condition: eq('${{ parameters.distribution }}', 'ubuntu')

  # build
  - template: ./unix-conda-build.yml
    parameters:
      distribution: ${{ parameters.distribution }}
      version: ${{ parameters.version }}
